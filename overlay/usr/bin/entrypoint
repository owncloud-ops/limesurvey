#!/usr/bin/env sh

set -eo pipefail

/usr/local/bin/gomplate -V -o /etc/php7/php.ini -f /etc/templates/php.ini.tmpl
/usr/local/bin/gomplate -V -o /var/www/app/application/config/config.php -f /etc/templates/config.php.tmpl

printf "\nPrepare survey ...\n"

if [ -n "$LIME_DB_HOST" ]
then
    printf "\nWait for database server on '%s:%s' ...\n" "$LIME_DB_HOST" "${LIME_DB_PORT:-3306}"
    /usr/local/bin/wait-for "${LIME_DB_HOST}":"${LIME_DB_PORT:-3306}"
else
    printf "\nRequired environment variable '\$LIME_DATABASE_HOST' not set. Exiting ...\n"
    exit 1
fi

# Automated install of limesurvey is quite fragile and so we have to avoid that the install command is ever executed more than once.
# If so, it will avoid the container from being restarted but also from being updated.
# Lime survey isn't offering any good mechanism to catch the failing as there are side effects that influence the thrown exception.
# Plugins is a persisted volume that we use for creating our custom "installation done" flag
printf "\nSetup lime survey\n"
printf "\nCheck if install has been performed already\n"
INSTALLER_FLAG=plugins/install.done
if ! [ -f "$INSTALLER_FLAG" ]; then
    printf "\nInstall lime survey\n"
    php /var/www/app/application/commands/console.php install "${LIME_ADMIN_USER}" "${LIME_ADMIN_PASSWORD}" "${LIME_ADMIN_USER}" "${LIME_ADMIN_EMAIL}" true
    touch $INSTALLER_FLAG
    echo "$(php -r 'include("application/config/version.php"); echo $config["versionnumber"];')" > $INSTALLER_FLAG
    echo $INSTALLER_FLAG >> $INSTALLER_FLAG
else
    printf "\nInstall already performed at former container start\n"
fi

# Database update shall only be performed if there is a new version installed to avoid updatedb to cause a php stacktrace...
# updatedb breaks if email.php has been templated in a former container start
printf "\nPerform database update check\n"
VERSION_LATEST_INSTALL=$(tail -1 $INSTALLER_FLAG)
VERSION_NEW="$(php -r 'include("application/config/version.php"); echo $config["versionnumber"];')"
if [ "$VERSION_LATEST_INSTALL" = "$VERSION_NEW" ]; then
    printf "\nNo database update needed\n"
else
    printf "\nPerform database update and see if version offset needs database migration\n"
    # Lime Devs told that it's sometimes neccesary to clean the runtime cache to run db migrations 
    rm -r tmp/runtime/*
    php /var/www/app/application/commands/console.php updatedb
    sed -i "2s/.*/$VERSION_NEW/" $INSTALLER_FLAG
fi

# updatedb will break if we execute the command with a templated email.php
# Since we check the versionnumber from the former install against the latest folder version, we can keep
# the templating in here without condition as updatedb is only executed when the version changed and then it's working as expected
printf "\nSetup lime survey email config\n\n"
/usr/local/bin/gomplate -V -o /var/www/app/application/config/email.php -f /etc/templates/email.php.tmpl

printf "\nStarting survey ...\n\n"

php-fpm7 -F &
exec nginx -g "daemon off;"
